{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/component.js","../src/index.js"],"sourcesContent":["\r\n// Thanks @stimulus:\r\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\r\nexport function domReady() {\r\n    return new Promise(resolve => {\r\n        if (document.readyState == \"loading\") {\r\n            document.addEventListener(\"DOMContentLoaded\", resolve)\r\n        } else {\r\n            resolve()\r\n        }\r\n    })\r\n}\r\n\r\nexport function arrayUnique(array) {\r\n    var a = array.concat();\r\n    for(var i=0; i<a.length; ++i) {\r\n        for(var j=i+1; j<a.length; ++j) {\r\n            if(a[i] === a[j])\r\n                a.splice(j--, 1);\r\n        }\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\nexport function isTesting() {\r\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\r\n        || navigator.userAgent.includes(\"jsdom\")\r\n}\r\n\r\nexport function kebabCase(subject) {\r\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\r\n}\r\n\r\nexport function keyToModifier(key) {\r\n    switch (key) {\r\n        case '/':\r\n            return 'slash'\r\n        case ' ':\r\n        case 'Spacebar':\r\n            return 'space'\r\n        default:\r\n            return kebabCase(key)\r\n    }\r\n}\r\n\r\nexport function walk(el, callback) {\r\n    if (callback(el) === false) return\r\n\r\n    let node = el.firstElementChild\r\n\r\n    while (node) {\r\n        walk(node, callback)\r\n\r\n        node = node.nextElementSibling\r\n    }\r\n}\r\n\r\nexport function debounce(func, wait) {\r\n    var timeout\r\n    return function () {\r\n        var context = this, args = arguments\r\n        var later = function () {\r\n            timeout = null\r\n            func.apply(context, args)\r\n        }\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(later, wait)\r\n    }\r\n}\r\n\r\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\r\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\r\n        dataContext, ...Object.values(additionalHelperVariables)\r\n    )\r\n}\r\n\r\nexport function isXAttr(attr) {\r\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/\r\n\r\n    return xAttrRE.test(name)\r\n}\r\n\r\nexport function getXAttrs(el, type) {\r\n    return Array.from(el.attributes)\r\n        .filter(isXAttr)\r\n        .map(attr => {\r\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\r\n\r\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|show|cloak|transition|ref)/)\r\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\r\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\r\n\r\n            return {\r\n                type: typeMatch ? typeMatch[1] : null,\r\n                value: valueMatch ? valueMatch[1] : null,\r\n                modifiers: modifiers.map(i => i.replace('.', '')),\r\n                expression: attr.value,\r\n            }\r\n        })\r\n        .filter(i => {\r\n            // If no type is passed in for filtering, bypassfilter\r\n            if (! type) return true\r\n\r\n            return i.type === type\r\n        })\r\n}\r\n\r\nexport function replaceAtAndColonWithStandardSyntax(name) {\r\n    if (name.startsWith('@')) {\r\n        return name.replace('@', 'x-on:')\r\n    } else if (name.startsWith(':')) {\r\n        return name.replace(':', 'x-bind:')\r\n    }\r\n\r\n    return name\r\n}\r\n\r\nexport function transitionIn(el, callback, forceSkip = false) {\r\n    if (forceSkip) return callback()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n\r\n    if (attrs.length < 1) return callback()\r\n\r\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\r\n}\r\n\r\nexport function transitionOut(el, callback, forceSkip = false) {\r\n    if (forceSkip) return callback()\r\n\r\n    const attrs = getXAttrs(el, 'transition')\r\n\r\n    if (attrs.length < 1) return callback()\r\n\r\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\r\n\r\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\r\n}\r\n\r\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\r\n    el.classList.add(...classesStart)\r\n    el.classList.add(...classesDuring)\r\n\r\n    requestAnimationFrame(() => {\r\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\r\n\r\n        hook1()\r\n\r\n        requestAnimationFrame(() => {\r\n            el.classList.remove(...classesStart)\r\n            el.classList.add(...classesEnd)\r\n\r\n            setTimeout(() => {\r\n                hook2()\r\n\r\n                // Adding an \"isConnected\" check, in case the callback\r\n                // removed the element from the DOM.\r\n                if (el.isConnected) {\r\n                    el.classList.remove(...classesDuring)\r\n                    el.classList.remove(...classesEnd)\r\n                }\r\n            }, duration);\r\n        })\r\n    });\r\n}\r\n","import { arrayUnique, walk, keyToModifier, saferEval, saferEvalNoReturn, getXAttrs, debounce, transitionIn, transitionOut } from './utils'\r\n\r\nexport default class Component {\r\n    constructor(el) {\r\n        this.$el = el\r\n\r\n        const dataAttr = this.$el.getAttribute('x-data')\r\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\r\n        const initExpression = this.$el.getAttribute('x-init')\r\n        const createdExpression = this.$el.getAttribute('x-created')\r\n        const mountedExpression = this.$el.getAttribute('x-mounted')\r\n\r\n        const unobservedData = saferEval(dataExpression, {})\r\n\r\n        // Add our magic properties to the original data for access.\r\n        unobservedData.$el = this.$el\r\n        unobservedData.$refs = this.getRefsProxy()\r\n\r\n        this.nextTickStack = []\r\n        unobservedData.$nextTick = (callback) => {\r\n            this.nextTickStack.push(callback)\r\n        }\r\n\r\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\r\n        this.$data = this.wrapDataInObservable(unobservedData)\r\n\r\n        var initReturnedCallback\r\n        if (initExpression) {\r\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\r\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\r\n            this.pauseReactivity = true\r\n            initReturnedCallback = saferEval(this.$el.getAttribute('x-init'), this.$data)\r\n            this.pauseReactivity = false\r\n        }\r\n\r\n        if (createdExpression) {\r\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\r\n            this.pauseReactivity = true\r\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\r\n            this.pauseReactivity = false\r\n        }\r\n\r\n        // Register all our listeners and set all our attribute bindings.\r\n        this.initializeElements(this.$el)\r\n\r\n        // Use mutation observer to detect new elements being added within this component at run-time.\r\n        // Alpine's just so darn flexible amirite?\r\n        this.listenForNewElementsToInitialize()\r\n\r\n        if (typeof initReturnedCallback === 'function') {\r\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\r\n            // Alpine's got it's grubby little paws all over everything.\r\n            initReturnedCallback.call(this.$data)\r\n        }\r\n\r\n        if (mountedExpression) {\r\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\r\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\r\n            // Alpine's got it's grubby little paws all over everything.\r\n            saferEvalNoReturn(mountedExpression, this.$data)\r\n        }\r\n    }\r\n\r\n    wrapDataInObservable(data) {\r\n        var self = this\r\n\r\n        const proxyHandler = {\r\n            set(obj, property, value) {\r\n                const setWasSuccessful = Reflect.set(obj, property, value)\r\n\r\n                // Don't react to data changes for cases like the `x-created` hook.\r\n                if (self.pauseReactivity) return\r\n\r\n                debounce(() => {\r\n                    self.updateElements(self.$el)\r\n\r\n                    // Walk through the $nextTick stack and clear it as we go.\r\n                    while (self.nextTickStack.length > 0) {\r\n                        self.nextTickStack.shift()()\r\n                    }\r\n                }, 0)()\r\n\r\n                return setWasSuccessful\r\n            },\r\n            get(target, key) {\r\n                // If the property we are trying to get is a proxy, just return it.\r\n                // Like in the case of $refs\r\n                if (target[key] && target[key].isRefsProxy) return target[key]\r\n\r\n                // If property is a DOM node, just return it. (like in the case of this.$el)\r\n                if (target[key] && target[key] instanceof Node) return target[key]\r\n\r\n                // If accessing a nested property, retur this proxy recursively.\r\n                // This enables reactivity on setting nested data.\r\n                if (typeof target[key] === 'object' && target[key] !== null) {\r\n                    return new Proxy(target[key], proxyHandler)\r\n                }\r\n\r\n                // If none of the above, just return the flippin' value. Gawsh.\r\n                return target[key]\r\n            }\r\n        }\r\n\r\n        return new Proxy(data, proxyHandler)\r\n    }\r\n\r\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\r\n        walk(el, el => {\r\n            // We've hit a component.\r\n            if (el.hasAttribute('x-data')) {\r\n                // If it's not the current one.\r\n                if (! el.isSameNode(this.$el)) {\r\n                    // Initialize it if it's not.\r\n                    if (! el.__x) initializeComponentCallback(el)\r\n\r\n                    // Now we'll let that sub-component deal with itself.\r\n                    return false\r\n                }\r\n            }\r\n\r\n            callback(el)\r\n        })\r\n    }\r\n\r\n    initializeElements(rootEl) {\r\n        this.walkAndSkipNestedComponents(rootEl, el => {\r\n            this.initializeElement(el)\r\n        }, el => {\r\n            el.__x = new Component(el)\r\n        })\r\n    }\r\n\r\n    initializeElement(el) {\r\n        // To support class attribute merging, we have to know what the element's\r\n        // original class attribute looked like for reference.\r\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\r\n            el.__originalClasses = el.getAttribute('class').split(' ')\r\n        }\r\n\r\n        this.registerListeners(el)\r\n        this.resolveBoundAttributes(el, true)\r\n    }\r\n\r\n    updateElements(rootEl) {\r\n        this.walkAndSkipNestedComponents(rootEl, el => {\r\n            this.updateElement(el)\r\n        }, el => {\r\n            el.__x = new Component(el)\r\n        })\r\n    }\r\n\r\n    updateElement(el) {\r\n        this.resolveBoundAttributes(el)\r\n    }\r\n\r\n    registerListeners(el) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'on':\r\n                    var event = value\r\n                    this.registerListener(el, event, modifiers, expression)\r\n                    break;\r\n\r\n                case 'model':\r\n                    // If the element we are binding to is a select, a radio, or checkbox\r\n                    // we'll listen for the change event instead of the \"input\" event.\r\n                    var event = (el.tagName.toLowerCase() === 'select')\r\n                        || ['checkbox', 'radio'].includes(el.type)\r\n                        || modifiers.includes('lazy')\r\n                        ? 'change' : 'input'\r\n\r\n                    const listenerExpression = this.generateExpressionForXModelListener(el, modifiers, expression)\r\n\r\n                    this.registerListener(el, event, modifiers, listenerExpression)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    resolveBoundAttributes(el, initialUpdate = false) {\r\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\r\n            switch (type) {\r\n                case 'model':\r\n                    var attrName = 'value'\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updateAttributeValue(el, attrName, output)\r\n                    break;\r\n\r\n                case 'bind':\r\n                    var attrName = value\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updateAttributeValue(el, attrName, output)\r\n                    break;\r\n\r\n                case 'text':\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updateTextValue(el, output)\r\n                    break;\r\n\r\n                case 'html':\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updateHtmlValue(el, output)\r\n                    break;\r\n\r\n                case 'show':\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updateVisibility(el, output, initialUpdate)\r\n                    break;\r\n\r\n                case 'if':\r\n                    var output = this.evaluateReturnExpression(expression)\r\n                    this.updatePresence(el, output)\r\n                    break;\r\n\r\n                case 'cloak':\r\n                    el.removeAttribute('x-cloak')\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    listenForNewElementsToInitialize() {\r\n        const targetNode = this.$el\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                // Filter out mutations triggered from child components.\r\n                if (! mutations[i].target.closest('[x-data]').isSameNode(this.$el)) return\r\n\r\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\r\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\r\n\r\n                    Object.keys(rawData).forEach(key => {\r\n                        if (this.$data[key] !== rawData[key]) {\r\n                            this.$data[key] = rawData[key]\r\n                        }\r\n                    })\r\n                }\r\n\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        if (node.matches('[x-data]')) {\r\n                            node.__x = new Component(node)\r\n                            return\r\n                        }\r\n\r\n                        this.initializeElements(node)\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions);\r\n    }\r\n\r\n    generateExpressionForXModelListener(el, modifiers, dataKey) {\r\n        var rightSideOfExpression = ''\r\n        if (el.type === 'checkbox') {\r\n            // If the data we are binding to is an array, toggle it's value inside the array.\r\n            if (Array.isArray(this.$data[dataKey])) {\r\n                rightSideOfExpression = `$event.target.checked ? ${dataKey}.concat([$event.target.value]) : ${dataKey}.filter(i => i !== $event.target.value)`\r\n            } else {\r\n                rightSideOfExpression = `$event.target.checked`\r\n            }\r\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\r\n            rightSideOfExpression = modifiers.includes('number')\r\n                ? 'Array.from($event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })'\r\n                : 'Array.from($event.target.selectedOptions).map(option => { return option.value || option.text })'\r\n        } else {\r\n            rightSideOfExpression = modifiers.includes('number')\r\n                ? 'parseFloat($event.target.value)'\r\n                : (modifiers.includes('trim') ? '$event.target.value.trim()' : '$event.target.value')\r\n        }\r\n\r\n        if (el.type === 'radio') {\r\n            // Radio buttons only work properly when they share a name attribute.\r\n            // People might assume we take care of that for them, because\r\n            // they already set a shared \"x-model\" attribute.\r\n            if (! el.hasAttribute('name')) el.setAttribute('name', dataKey)\r\n        }\r\n\r\n        return `${dataKey} = ${rightSideOfExpression}`\r\n    }\r\n\r\n    registerListener(el, event, modifiers, expression) {\r\n        if (modifiers.includes('away')) {\r\n            const handler = e => {\r\n                // Don't do anything if the click came form the element or within it.\r\n                if (el.contains(e.target)) return\r\n\r\n                // Don't do anything if this element isn't currently visible.\r\n                if (el.offsetWidth < 1 && el.offsetHeight < 1) return\r\n\r\n                // Now that we are sure the element is visible, AND the click\r\n                // is from outside it, let's run the expression.\r\n                this.runListenerHandler(expression, e)\r\n\r\n                if (modifiers.includes('once')) {\r\n                    document.removeEventListener(event, handler)\r\n                }\r\n            }\r\n\r\n            // Listen for this event at the root level.\r\n            document.addEventListener(event, handler)\r\n        } else {\r\n            const listenerTarget = modifiers.includes('window')\r\n                ? window : (modifiers.includes('document') ? document : el)\r\n\r\n            const handler = e => {\r\n                const keyModifiers = modifiers.filter(i => i !== 'window').filter(i => i !== 'document')\r\n\r\n                // The user is scoping the keydown listener to a specific key using modifiers.\r\n                if (event === 'keydown' && keyModifiers.length > 0) {\r\n                    // The user is listening for a specific key.\r\n                    if (keyModifiers.length === 1 && ! keyModifiers.includes(keyToModifier(e.key))) return\r\n\r\n                    // The user is listening for key combinations.\r\n                    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\r\n                    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\r\n\r\n                    if (selectedSystemKeyModifiers.length > 0) {\r\n                        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\r\n                            // Alias \"cmd\" and \"super\" to \"meta\"\r\n                            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\r\n\r\n                            return e[`${modifier}Key`]\r\n                        })\r\n\r\n                        if (activelyPressedKeyModifiers.length === 0) return\r\n                    }\r\n                }\r\n\r\n                if (modifiers.includes('prevent')) e.preventDefault()\r\n                if (modifiers.includes('stop')) e.stopPropagation()\r\n\r\n                this.runListenerHandler(expression, e)\r\n\r\n                if (modifiers.includes('once')) {\r\n                    listenerTarget.removeEventListener(event, handler)\r\n                }\r\n            }\r\n\r\n            listenerTarget.addEventListener(event, handler)\r\n        }\r\n    }\r\n\r\n    runListenerHandler(expression, e) {\r\n        this.evaluateCommandExpression(expression, {\r\n            '$event': e,\r\n        })\r\n    }\r\n\r\n    evaluateReturnExpression(expression) {\r\n        return saferEval(expression, this.$data)\r\n    }\r\n\r\n    evaluateCommandExpression(expression, extraData) {\r\n        saferEvalNoReturn(expression, this.$data, extraData)\r\n    }\r\n\r\n    updateTextValue(el, value) {\r\n        el.innerText = value\r\n    }\r\n\r\n    updateHtmlValue(el, value) {\r\n        el.innerHTML = value\r\n    }\r\n\r\n    updateVisibility(el, value, initialUpdate = false) {\r\n        if (! value) {\r\n            transitionOut(el, () => {\r\n                el.style.display = 'none'\r\n            }, initialUpdate)\r\n        } else {\r\n            transitionIn(el, () => {\r\n                if (el.style.length === 1 && el.style.display !== '') {\r\n                    el.removeAttribute('style')\r\n                } else {\r\n                    el.style.removeProperty('display')\r\n                }\r\n            }, initialUpdate)\r\n        }\r\n    }\r\n\r\n    updatePresence(el, expressionResult) {\r\n        if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags.`)\r\n\r\n        const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\r\n\r\n        if (expressionResult && ! elementHasAlreadyBeenAdded) {\r\n            const clone = document.importNode(el.content, true);\r\n\r\n            el.parentElement.insertBefore(clone, el.nextElementSibling)\r\n\r\n            el.nextElementSibling.__x_inserted_me = true\r\n\r\n            transitionIn(el.nextElementSibling, () => {})\r\n        } else if (! expressionResult && elementHasAlreadyBeenAdded) {\r\n            transitionOut(el.nextElementSibling, () => {\r\n                el.nextElementSibling.remove()\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttributeValue(el, attrName, value) {\r\n        if (attrName === 'value') {\r\n            if (el.type === 'radio') {\r\n                el.checked = el.value == value\r\n            } else if (el.type === 'checkbox') {\r\n                if (Array.isArray(value)) {\r\n                    // I'm purposely not using Array.includes here because it's\r\n                    // strict, and because of Numeric/String mis-casting, I\r\n                    // want the \"includes\" to be \"fuzzy\".\r\n                    let valueFound = false\r\n                    value.forEach(val => {\r\n                        if (val == el.value) {\r\n                            valueFound = true\r\n                        }\r\n                    })\r\n\r\n                    el.checked = valueFound\r\n                } else {\r\n                    el.checked = !! value\r\n                }\r\n            } else if (el.tagName === 'SELECT') {\r\n                this.updateSelect(el, value)\r\n            } else {\r\n                el.value = value\r\n            }\r\n        } else if (attrName === 'class') {\r\n            if (Array.isArray(value)) {\r\n                const originalClasses = el.__originalClasses || []\r\n                el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\r\n            } else if (typeof value === 'object') {\r\n                Object.keys(value).forEach(classNames => {\r\n                    if (value[classNames]) {\r\n                        classNames.split(' ').forEach(className => el.classList.add(className))\r\n                    } else {\r\n                        classNames.split(' ').forEach(className => el.classList.remove(className))\r\n                    }\r\n                })\r\n            } else {\r\n                const originalClasses = el.__originalClasses || []\r\n                const newClasses = value.split(' ')\r\n                el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\r\n            }\r\n        } else if (['disabled', 'readonly', 'required', 'checked', 'hidden'].includes(attrName)) {\r\n            // Boolean attributes have to be explicitly added and removed, not just set.\r\n            if (!! value) {\r\n                el.setAttribute(attrName, '')\r\n            } else {\r\n                el.removeAttribute(attrName)\r\n            }\r\n        } else {\r\n            el.setAttribute(attrName, value)\r\n        }\r\n    }\r\n\r\n    updateSelect(el, value) {\r\n        const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\r\n\r\n        Array.from(el.options).forEach(option => {\r\n            option.selected = arrayWrappedValue.includes(option.value || option.text)\r\n        })\r\n    }\r\n\r\n    getRefsProxy() {\r\n        var self = this\r\n\r\n        var refObj = {}\r\n\r\n        // If we are in IE, since the polyfill needs all properties to be defined before building the proxy,\r\n        // we just loop on the element, look for any x-ref and create a the property on a fake object.\r\n        // We don't need to put a real value since it will be resolved by the proxy class\r\n        if (window.document.documentMode) {\r\n            this.walkAndSkipNestedComponents(self.$el, el => {\r\n                if (el.hasAttribute('x-ref')) {\r\n                    refObj.el = true\r\n                }\r\n            })\r\n        }\r\n\r\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\r\n        // the DOM when the system needs something from it. This way, the framework is flexible and\r\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\r\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\r\n        return new Proxy(refObj, {\r\n            get(object, property) {\r\n                if (property === 'isRefsProxy') return true\r\n\r\n                var ref\r\n\r\n                // We can't just query the DOM because it's hard to filter out refs in\r\n                // nested components.\r\n                self.walkAndSkipNestedComponents(self.$el, el => {\r\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\r\n                        ref = el\r\n                    }\r\n                })\r\n\r\n                return ref\r\n            }\r\n        })\r\n    }\r\n}\r\n","import Component from './component'\r\nimport { domReady, isTesting } from './utils'\r\n\r\nconst Alpine = {\r\n    start: async function () {\r\n        if (! isTesting()) {\r\n            await domReady()\r\n        }\r\n\r\n        this.discoverComponents(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n\r\n        // It's easier and more performant to just support Turbolinks than listen\r\n        // to MutationOberserver mutations at the document level.\r\n        document.addEventListener(\"turbolinks:load\", () => {\r\n            this.discoverUninitializedComponents(el => {\r\n                this.initializeComponent(el)\r\n            })\r\n        })\r\n\r\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\r\n            this.initializeComponent(el)\r\n        })\r\n    },\r\n\r\n    discoverComponents: function (callback) {\r\n        const rootEls = document.querySelectorAll('[x-data]');\r\n\r\n        rootEls.forEach(rootEl => {\r\n            callback(rootEl)\r\n        })\r\n    },\r\n\r\n    discoverUninitializedComponents: function (callback) {\r\n        const rootEls = document.querySelectorAll('[x-data]');\r\n\r\n        Array.from(rootEls)\r\n            .filter(el => el.__x === undefined)\r\n            .forEach(rootEl => {\r\n                callback(rootEl)\r\n            })\r\n    },\r\n\r\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\r\n        const targetNode = document.querySelector('body');\r\n\r\n        const observerOptions = {\r\n            childList: true,\r\n            attributes: true,\r\n            subtree: true,\r\n        }\r\n\r\n        const observer = new MutationObserver((mutations) => {\r\n            for (let i=0; i < mutations.length; i++){\r\n                if (mutations[i].addedNodes.length > 0) {\r\n                    mutations[i].addedNodes.forEach(node => {\r\n                        // Discard non-element nodes (like line-breaks)\r\n                        if (node.nodeType !== 1) return\r\n\r\n                        // Discard any changes happening within an existing component.\r\n                        // They will take care of themselves.\r\n                        if (node.closest('[x-data]')) return\r\n\r\n                        // This is a new top-level component.\r\n                        if (node.matches('[x-data]')) callback(node)\r\n                    })\r\n                }\r\n              }\r\n        })\r\n\r\n        observer.observe(targetNode, observerOptions)\r\n    },\r\n\r\n    initializeComponent: function (el) {\r\n        el.__x = new Component(el)\r\n    }\r\n}\r\n\r\nif (! isTesting()) {\r\n    window.Alpine = Alpine\r\n    window.Alpine.start()\r\n}\r\n\r\nexport default Alpine\r\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","callback","forceSkip","attrs","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","$refs","getRefsProxy","nextTickStack","$nextTick","push","$data","wrapDataInObservable","pauseReactivity","console","warn","initializeElements","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","setWasSuccessful","Reflect","func","wait","timeout","updateElements","shift","context","args","arguments","later","apply","clearTimeout","get","target","key","isRefsProxy","Node","Proxy","walkAndSkipNestedComponents","initializeComponentCallback","walk","node","firstElementChild","nextElementSibling","hasAttribute","isSameNode","__x","rootEl","initializeElement","__originalClasses","registerListeners","resolveBoundAttributes","updateElement","forEach","event","registerListener","tagName","toLowerCase","listenerExpression","generateExpressionForXModelListener","initialUpdate","attrName","output","evaluateReturnExpression","updateAttributeValue","updateTextValue","updateHtmlValue","updateVisibility","updatePresence","removeAttribute","targetNode","MutationObserver","mutations","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","dataKey","rightSideOfExpression","isArray","multiple","setAttribute","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","document","removeEventListener","addEventListener","listenerTarget","window","keyModifiers","keyToModifier","selectedSystemKeyModifiers","modifier","preventDefault","stopPropagation","evaluateCommandExpression","extraData","innerText","innerHTML","style","display","removeProperty","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","clone","importNode","content","parentElement","insertBefore","checked","valueFound","val","updateSelect","originalClasses","join","classNames","className","newClasses","arrayWrappedValue","options","option","selected","text","refObj","documentMode","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","undefined","querySelector"],"mappings":"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"}